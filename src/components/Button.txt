<template>
  <button class="clearButton"><slot></slot>{{ label }}</button>
</template>

<script>
export default {
  name: 'Button',
  props: {
    label: {
      type: String,
      default: '',
    },
  },
  mounted() {
    this.validateIcon()
  },
  data() {
    return {
      isValid: false,
    }
  },
  methods: {
    validateIcon() {
      const iconSlotContent = this.$slots.default?.()[0]

      const vnodeTag =
        typeof iconSlotContent.type === 'string'
          ? iconSlotContent.type // HTML tag (e.g., 'div', 'i', 'span')
          : iconSlotContent.type?.name // Component name (if available)
      debugger
      console.log('name =' + iconSlotContent?.type?.name)
      if (iconSlotContent?.type?.name.includes('Icon')) {
        this.isValid = true
      } else {
        console.warn("Invalid content in 'icon' slot!")
      }
    },
  },
}
</script>

<style scoped>
.clearButton {
  border: 0;
  background-color: transparent;
}
</style>
